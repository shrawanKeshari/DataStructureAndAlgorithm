Problem Description
Given an array A of non-negative integers, arrange them such that they form the largest number.

Note: The result may be very large, so you need to return a string instead of an integer.



Problem Constraints
1 <= len(A) <= 100000
0 <= A[i] <= 2*109



Input Format
The first argument is an array of integers.



Output Format
Return a string representing the largest number.



Example Input
Input 1:

 A = [3, 30, 34, 5, 9]
Input 2:

 A = [2, 3, 9, 0]


Example Output
Output 1:

 "9534330"
Output 2:

 "9320"


Example Explanation
Explanation 1:

Reorder the numbers to [9, 5, 34, 3, 30] to form the largest number.
Explanation 2:

Reorder the numbers to [9, 3, 2, 0] to form the largest number 9320.




Solution

public class Solution {
    // DO NOT MODIFY THE LIST. IT IS READ ONLY
    public String largestNumber(final List<Integer> A) {
        int len = A.size();

        List<String> newList = new ArrayList<String>();
        for(int i = 0; i < len; i++){
            newList.add(String.valueOf(A.get(i)));
        }

        Collections.sort(newList, new Comparator<String>(){
            public int compare(String one, String two){
                String first = one+two;
                String second = two+one;
                if(first.compareTo(second) > 0){
                    return -1;
                }else if(first.compareTo(second) < 0){
                    return 1;
                }

                return 0;
            }
        });

        
        String ans = "";
        for(int i = 0; i < len; i++){
            ans = ans + newList.get(i);
        }
        
        if(ans.length() > 1 && ans.charAt(0) == '0'){
            return "0";
        }

        return ans;
    }
}
