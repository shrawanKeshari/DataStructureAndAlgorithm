Problem Description
You are given an array A of length N and Q queries given by the 2D array B of size Q*2. Each query consists of two integers B[i][0] and B[i][1].
For every query, the task is to calculate the sum of all odd indices in the range A[B[i][0]â€¦B[i][1]].

Note : Use 0-based indexing


Problem Constraints
1 <= N <= 105
1 <= Q <= 105
1 <= A[i] <= 100
0 <= B[i][0] <= B[i][1] < N


Input Format
First argument A is an array of integers.
Second argument B is a 2D array of integers.


Output Format
Return an array of integers.


Example Input
Input 1:
A = [1, 2, 3, 4, 5]
B = [   [0,2] 
        [1,4]   ]
Input 2:
A = [2, 1, 8, 3, 9]
B = [   [0,3] 
        [2,4]   ]


Example Output
Output 1:
[2, 6]
Output 2:
[4, 3]


Example Explanation
For Input 1:
The subarray for the first query is [1, 2, 3] whose sum of odd indices is 2.
The subarray for the second query is [2, 3, 4, 5] whose sum of odd indices is 6.
For Input 2:
The subarray for the first query is [2, 1, 8, 3] whose sum of odd indices is 4.
The subarray for the second query is [8, 3, 9] whose sum of odd indices is 3.



Solution

public class Solution {
    public ArrayList<Integer> solve(ArrayList<Integer> A, ArrayList<ArrayList<Integer>> B) {
        int len = A.size();
        ArrayList<Integer> result = new ArrayList<Integer>();

        for(int i = 3; i < len; i++){
            if(i%2 == 1){
                int num = A.get(i);
                A.set(i, num + A.get(i-2));
            }
        }

        int queries = B.size();

        for(int i = 0; i < queries; i++){
            int start = B.get(i).get(0);
            int end = B.get(i).get(1);

            end = (end%2==0 ? end-1 : end);

            if(end > 0){
                if(start <= 1){
                    result.add(A.get(end));
                }else{
                    if(start%2 == 0){
                        start = start-1;
                    }else{
                        start = start-2;
                    }
                    result.add(A.get(end) - A.get(start));
                }
            }else{
                result.add(0);
            }
        }

        return result;
    }
}
