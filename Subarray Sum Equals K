Given an array of integers A and an integer B.

Find the total number of subarrays having sum equals to B.


Input Format

The first argument given is the integer array A.
The second argument given is integer B.
Output Format

Return the total number of subarrays having sum equals to B.
Constraints

1 <= length of the array <= 50000
-1000 <= A[i] <= 1000 
For Example

Input 1:
    A = [1, 0, 1]
    B = 1
Output 1:
    4
    Explanation 1:
        [1], [1, 0], [0, 1] and [1] are four subarrays having sum 1.

Input 2:
    A = [0, 0, 0]
    B = 0
Output 2:
    6
    
    


Solution

public class Solution {
    public int solve(ArrayList<Integer> A, int B) {
        int len = A.size();
        HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();

        if(len == 1){
            if(A.get(0) == B){
                return 1;
            }
            return 0;
        }

        int sum = A.get(0);
        int count = 0;
        if(sum == B){
            count++;
        }
        map.put(sum, 1);
        for(int i = 1; i < len; i++){
            sum = sum + A.get(i);
            if(sum == B){
                count++;
            }
            int curr = sum - B;
            if(map.containsKey(curr)){
                int curr_count = map.get(curr);
                count = count + curr_count;
            }
            if(map.containsKey(sum)){
                int curr_count = map.get(sum);
                map.put(sum, curr_count+1);
            }else{
                map.put(sum, 1);
            }
        }

        return count;
    }
}
