Problem Description
Given an unsorted integer array, A of size N. Find the first missing positive integer.

Note: Your algorithm should run in O(n) time and use constant space.



Problem Constraints
1 <= N <= 1000000

-109 <= A[i] <= 109



Input Format
First argument is an integer array A.



Output Format
Return an integer denoting the first missing positive integer.



Example Input
Input 1:

[1, 2, 0]
Input 2:

[3, 4, -1, 1]
Input 3:

[-8, -7, -6]


Example Output
Output 1:

3
Output 2:

2
Output 3:

1


Example Explanation
Explanation 1:

A = [1, 2, 0]
First positive integer missing from the array is 3.




Solution

public class Solution {
    public int firstMissingPositive(ArrayList<Integer> A) {
        int len = A.size();

        int i = 0;
        while(i < len){
            while(A.get(i) > 0 && A.get(i) != i+1){
                if(A.get(i) <= len && A.get(i) != A.get(A.get(i)-1)){
                    int temp = A.get(i);
                    A.set(i, A.get(temp-1));
                    A.set(temp-1, temp);
                }else{
                    break;
                }
            }
            i++;
        }

        for(i = 0; i < len; i++){
            if(A.get(i) != i+1){
                return (i+1);
            }
        }

        return len+1;
    }
}
