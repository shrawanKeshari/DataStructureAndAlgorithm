Problem Description
You have given a string A having Uppercase English letters.

You have to find the number of pairs (i, j) such that A[i] = 'A', A[j] = 'G' and i < j.



Problem Constraints
1 <= length(A) <= 105



Input Format
First and only argument is a string A.



Output Format
Return an long integer denoting the answer.



Example Input
Input 1:

 A = "ABCGAG"
Input 2:

 A = "GAB"


Example Output
Output 1:

 3
Output 2:

 0


Example Explanation
Explanation 1:

 Subsequence "AG" is 3 times in given string 
Explanation 2:

 There is no subsequence "AG" in the given string.
 
 
Solution

public class Solution {
    public Long solve(String A) {
        int len = A.length();
        long ans = 0;
        long count_a = 0;

        for(int i = 0; i < len; i++){
            if(A.charAt(i) == 'A'){
                count_a++;
            }

            if(A.charAt(i) == 'G'){
                ans = ans + count_a;
            }
        }

        return ans;
    }
}
